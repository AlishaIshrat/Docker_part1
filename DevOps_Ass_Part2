# Docker Practical Assignment Part 2

This document contains the required Docker container commands along with brief explanations and their respective outputs.  
The Docker image used in this assignment is: 40851/first-image

---

Step 1: Using the Docker Image

We are using the Docker image we built in Part 1



 Step 2: Run the Docker Container
Command:
bash
docker run -d --name docker-container -p 3000:3000 40851/first-image


Ouput:
bash
490f89b5b6047b428ef3d0dd4566acf607beb24a78c3cd8d61706455415d554a

Now you can access the application on: http://localhost:3000



 Step 3: Docker Container Commands
 1. docker ps  
   Lists all running containers.  
   Command:
   bash
   docker run -d --name docker-continer -p 3000:3000 40851/first-image
   

   *Ouput:*
   bash
   CONTAINER ID       IMAGE                         COMMAND         CREATED         STATUS            PORTS                    NAMES
   10a22643196d   40851/first-image:latest    "docker-entrypoint.s..."  2 minutes ago   upto 2 minutes    0.0.0.0:3000->3000/tcp    docker-container
   

 2. docker stop  
Stops a running container.  
   Command:
   bash
   docker stop docker-container
   

   Ouput:
   bash
   docker-container
   

 3. docker rm  
   Removes a stopped container.    
   Command:
   bash
   docker rm  docker-container
   

   Ouput:
   bash
    docker-container
   

 4. docker logs  
   Views logs of a container.  
   (Make sure to create a container again for this because rm removes the container)  
   Command:
   bash
   docker logs  docker-container
   

   Ouput:
   bash
   App listening at http://localhost:3000
   

 5. docker inspect
   Displays low-level details of a container.  
   Command:
   bash
   docker inspect docker-container
   

   Ouput:
   bash
   [
    {
        "Id": "b52397717047a9661a68b2f8ccb4d4180ebccb6ba1690e6842944d5f1a57f3ea",
        "Created": "2025-04-13T21:02:20.772647986Z",
        "Path": "docker-entrypoint.sh",
        "Args": [
            "node",
            "file.js"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 740,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2025-04-13T21:02:20.999844597Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c0cadeb2bddbd36be8f702c40377d249bf90a9f0d9f41f3544f5f543eebc12a9",
        "ResolvConfPath": "/var/lib/docker/containers/f0f3fedeb690878605f8294b2cc89e8461f917b86c460ab56b78f885b8f383d2/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/f0f3fedeb690878605f8294b2cc89e8461f917b86c460ab56b78f885b8f383d2/hostname",
        "HostsPath": "/var/lib/docker/containers/f0f3fedeb690878605f8294b2cc89e8461f917b86c460ab56b78f885b8f383d2/hosts",
        "LogPath": "/var/lib/docker/containers/f0f3fedeb690878605f8294b2cc89e8461f917b86c460ab56b78f885b8f383d2/f0f3fedeb690878605f8294b2cc89e8461f917b86c460ab56b78f885b8f383d2-json.log",
        "Name": "/mydockerapp",
        "RestartCount": 0,
        "Driver": "overlayfs",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "bridge",
            "PortBindings": {
                "3000/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "3000"
                    }
                ]
            },
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "ConsoleSize": [
                22,
                174
            ],
            "CapAdd": null,
            "CapDrop": null,
            "CgroupnsMode": "host",
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "private",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": [],
            "BlkioDeviceWriteBps": [],
            "BlkioDeviceReadIOps": [],
            "BlkioDeviceWriteIOps": [],
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DeviceRequests": null,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": null,
            "Ulimits": [],
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/asound",
                "/proc/acpi",
                "/proc/interrupts",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware",
                "/sys/devices/virtual/powercap"
            ],
            "ReadonlyPaths": [
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": null,
            "Name": "overlayfs"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "f0f3fedeb690",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "3000/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "NODE_VERSION=18.20.8",
                "YARN_VERSION=1.22.22"
            ],
            "Cmd": [
                "node",
                "file.js"
            ],
            "Image": "40851/first-image",
            "Volumes": null,
            "WorkingDir": "/app",
            "Entrypoint": [
                "docker-entrypoint.sh"
            ],
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "9a142d162d1e24d922e3aab797e43b6a74b31027e12e1b38cef0e04353e596ea",
            "SandboxKey": "/var/run/docker/netns/9a142d162d1e",
            "Ports": {
                "3000/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "3000"
                    }
                ]
            },
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "2b73431875c2735bee8029fd4753fdfaafd99997cb5fac0532f398372cd0e0a2",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "8e:71:0e:ce:44:2e",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "8e:71:0e:ce:44:2e",
                    "DriverOpts": null,
                    "GwPriority": 0,
                    "NetworkID": "d646dda7066eb6226c5fbab2f511b813e26f1608646e6e7f10b3d7d19ca7abb9",
                    "EndpointID": "2b73431875c2735bee8029fd4753fdfaafd99997cb5fac0532f398372cd0e0a2",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DNSNames": null
                }
            }
        },
        "ImageManifestDescriptor": {
            "mediaType": "application/vnd.oci.image.manifest.v1+json",
            "digest": "sha256:c05c34a5a147f96915fbcb3751e97d5af77fddc7cdd7023105d3b4b59c4fdd2d",
            "size": 1813,
            "platform": {
                "architecture": "amd64",
                "os": "linux"
            }
        }
    }
]
   

 6. docker exec
   Executes a command inside a running container.  
   Command:
   bash
   docker exec docker-container ls /app
   

   *Ouput:*
   bash
   Dockerfile
   file.js
   node_modules
   package-lock.json
   package.json
   

 7. docker attach
   Attach local input/output/error streams to a running container.  
    Command:
   bash
   docker attach  docker-container
   

   Ouput:  
   (Takes a long time. Press Ctrl + C 3 times to exit)  
   bash
   got 3 SIGTERM/SIGINTs, forcefully exiting
   

 8. docker commit
   Creates a new image from a container.    
   Command:
   bash
   docker commit  docker-container mydockerapp:v2
   

   *Ouput:*
   bash
   sha256:ded896be2d7db3e4b2140a1c85d0442dc76c3433030869e948e95954233c2ca4
   

 9. docker cp
   Copy files between container and host.    
   *Command:*
   bash
   docker cp mydockerapp:/app/file.js ./file-copy.j
   

   *Ouput:*
   bash
   Successfully copied 2.05kB to C:\Users\User\OneDrive\Desktop\DO\Assignments\Docker App\file-copy.js
   

 10. docker stats
   Real-time container resource usage.    
   Command:
   bash
   docker stats
   

   *Ouput:*
   bash
   CONTAINER ID   NAME          CPU %     MEM USAGE / LIMIT   MEM %     NET I/O         BLOCK I/O   PIDS
   b52397717047    docker-container   0.00%     49MiB / 7.675GiB    0.62%     1.17kB / 126B   0B / 0B     7
   


 11. docker top
   Shows running processes inside the container.  
    Command:
   bash
   docker top  docker-container
   

   *Ouput:*
   bash
   UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
   root                1119                1096                0                   21:02               ?                   00:00:00            node file.js
   


 12. docker start
   Starts a stopped container.  
   Command:
   bash
   docker start  docker-container
   

   Ouput:
   bash
   mydockerapp
   

 13. docker pause
   Starts a stopped container.    
   Command:
   bash
   docker pause  docker-container
   

   Ouput:
   bash
    docker-container
   


 14. docker unpause
   Starts a stopped container.    
   Command:
   bash
   docker unpause mydockerapp
   

   Ouput:
   bash
   mydockerapp
   


 15. docker rename
   Renames a container.  
   Command:
   bash
   docker rename  docker-container myapp-renamed
   

   Ouput:
   bash
   # No output, but name is changed
   


 16. docker wait
   Waits for the container to exit and prints the exit code.  
   Command:
   bash
   docker wait myapp-renamed
   

   Ouput:
   bash
   # No output
   

 17. docker port
   Displays port mappings.  
   Command:
   bash
   docker port myapp-renamed
   

   Ouput:
   bash
   3000/tcp -> 0.0.0.0:3000
   


 18. docker update
   Updates container resource limits.  
   Command:
   bash
   docker update --memory 256m --memory-swap 512m myapp
   

   Ouput:
   bash
   myapp
   

 19. docker restart
   Restarts a container.  
   Command:
   bash
   docker restart myapp
   

   Ouput:
   bash
   myapp
   
